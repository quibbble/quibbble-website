import { Link } from 'react-router-dom'
import { useSpring, animated } from '@react-spring/web'
import { useContext, useState } from 'react';
import { interpolate } from "flubber";
import { gamedata } from '../../data/games';
import { ActivityContext } from '../../App';

export function GameButton({game}) {
    const [active, setActive] = useState(false)

    const { activity } = useContext(ActivityContext);

    return (
        <Link className="relative flex group" to={`/games/${game}`} state={{ from: location.pathname }} onMouseEnter={() => setActive(true)} onMouseLeave={() => setActive(false)}>
            <div className="absolute z-10 flex flex-col p-4 text-gray md:p-6">
                <p className={`font-lobster text-base md:text-xl text-${gamedata[game].color}`}>{game.charAt(0).toUpperCase() + game.slice(1)}</p>
                <div className="mt-6 text-xs md:text-sm">
                    <p><span className={`font-bold text-${gamedata[game].color}`}>{ activity?.live_game_count[game] }</span> Live Games</p>
                    <p><span className={`font-bold text-${gamedata[game].color}`}>{ activity?.live_player_count[game] }</span> Active Players</p>
                </div>
            </div>
            <Animation color={gamedata[game].color} active={active}/>
        </Link>
    )
}

const i = interpolate(
    "M204.25,61.57h0c-8.16,3.38-16.93,3.13-24.49,0-7.57-3.13-13.94-9.15-17.32-17.32h0c-3.38-8.16-3.13-16.93,0-24.49,3.13-7.57,9.15-13.94,17.32-17.32h0c8.16-3.38,16.93-3.13,24.49,0,7.57,3.13,13.94,9.15,17.32,17.32h0c3.38,8.16,3.13,16.93,0,24.49-3.13,7.57-9.15,13.94-17.32,17.32Z",
    "M164,0h56c2.21,0,4,1.79,4,4v56c0,2.21-1.79,4-4,4h-36c-13.25,0-24-10.75-24-24V4c0-2.21,1.79-4,4-4Z",
    { maxSegmentLength: 0.5 }
)

function Animation({color, active}) {
    const { x } = useSpring({ 
        config: {
            duration: 250,
            clamp: true,
        },
        x: active ? 1 : 0 
    });

    return (
        <div className="App">
            <svg className="fill-dark-900 drop-shadow-md" 
                width="100%" height="100%" 
                viewBox="0 0 224 224" >
                <animated.path 
                    className={`fill-dark-900 group-hover:fill-dark-600`}
                    fillRule="evenodd" 
                    clipRule="evenodd"
                    d={x.to({
                        range: [0, 1],
                        output: [
                            "M0 24C0 10.7452 10.7452 0 24 0H128C141.255 0 152 10.7452 152 24V36C152 55.8823 168.118 72 188 72H200C213.255 72 224 82.7452 224 96V200C224 213.255 213.255 224 200 224H24C10.7452 224 0 213.255 0 200V24ZM200.012 3.14722e-06C200.008 1.04916e-06 200.004 0 200 0H188C188.005 0 188.01 1.04914e-06 188.015 3.14722e-06H200.012Z",
                            "M0 12C0 5.37258 5.37258 0 12 0H140C146.627 0 152 5.37258 152 12V36C152 55.8823 168.118 72 188 72H212C218.627 72 224 77.3726 224 84V212C224 218.627 218.627 224 212 224H12C5.37258 224 0 218.627 0 212V12ZM212.009 3.14722e-06C212.006 1.04919e-06 212.003 0 212 0H188C188.005 0 188.01 1.04914e-06 188.015 3.14722e-06H212.009Z"
                        ],
                      })} />
                <animated.path
                    className={`fill-${color} group-hover:fill-dark-600 transition ease-in-out duration-200`}
                    d={x.to(i)} />
                <animated.path className={`fill-white group-hover:fill-${color} transition ease-in-out duration-200`} 
                    d={x.to({
                        range: [0, 1],
                        output: [
                            "M202.718 23.8658C202.614 23.7326 202.495 23.6129 202.362 23.5095L202.276 23.424C202.124 23.2734 201.945 23.1526 201.749 23.0678C201.53 22.967 201.292 22.9136 201.051 22.9111L186.802 22.9111C186.265 22.9111 185.75 23.1242 185.371 23.5037C184.991 23.8832 184.778 24.3978 184.778 24.9344C184.778 25.4711 184.991 25.9857 185.371 26.3652C185.75 26.7446 186.265 26.9578 186.802 26.9578L196.078 26.7726L182.413 40.4375C182.035 40.8154 181.823 41.328 181.823 41.8624C181.823 42.3969 182.035 42.9094 182.413 43.2873C182.791 43.6652 183.303 43.8776 183.838 43.8776C184.372 43.8776 184.885 43.6652 185.263 43.2873L198.928 29.6224L198.913 39.0126C198.912 39.2786 198.964 39.5422 199.065 39.7882C199.166 40.0342 199.315 40.2577 199.504 40.4458C199.692 40.6339 199.915 40.7829 200.161 40.8842C200.407 40.9855 200.671 41.0371 200.937 41.036C201.203 41.0371 201.466 40.9855 201.712 40.8842C201.958 40.7829 202.182 40.6339 202.37 40.4458C202.558 40.2577 202.707 40.0342 202.808 39.7882C202.91 39.5422 202.961 39.2786 202.96 39.0126L202.96 24.7635C202.95 24.5232 202.897 24.2868 202.803 24.0653C202.787 23.9941 202.758 23.9266 202.718 23.8658Z",
                            "M206.718 19.8614C206.614 19.7282 206.495 19.6085 206.362 19.5051L206.276 19.4196C206.124 19.269 205.945 19.1482 205.749 19.0634C205.53 18.9626 205.292 18.9092 205.051 18.9067L190.802 18.9067C190.265 18.9067 189.75 19.1199 189.371 19.4993C188.991 19.8788 188.778 20.3934 188.778 20.9301C188.778 21.4667 188.991 21.9813 189.371 22.3608C189.75 22.7403 190.265 22.9534 190.802 22.9534L200.078 22.7682L186.413 36.4331C186.035 36.811 185.823 37.3236 185.823 37.858C185.823 38.3925 186.035 38.905 186.413 39.2829C186.791 39.6608 187.303 39.8732 187.838 39.8732C188.372 39.8732 188.885 39.6608 189.263 39.2829L202.928 25.618L202.913 35.0082C202.912 35.2742 202.964 35.5378 203.065 35.7838C203.166 36.0298 203.315 36.2533 203.504 36.4414C203.692 36.6295 203.915 36.7785 204.161 36.8798C204.407 36.9811 204.671 37.0327 204.937 37.0316C205.203 37.0327 205.466 36.9811 205.712 36.8798C205.958 36.7785 206.182 36.6295 206.37 36.4414C206.558 36.2533 206.707 36.0298 206.808 35.7838C206.91 35.5378 206.961 35.2742 206.96 35.0082L206.96 20.7591C206.95 20.5188 206.897 20.2824 206.803 20.0609C206.787 19.9897 206.758 19.9222 206.718 19.8614Z"                        
                        ],
                      })} />
            </svg>
        </div>
    )
}
